We do the encoding techniques on categorical variables

There are two types of categorical_variables:

* Nominal - It doesn't follow any order
    For Example : Gender - Male, Female

* Ordinal - It follows some order(Ranking)
    For Example : Education Qualifaction : Masters, Graduation, Inter, 10th, Schooling


------------------------------------------------------------------------------------


In Encoding also there are types:

* Nominal Encoding - Nominal Categorical Values
* Ordinal Encoding - Ordinal Categorical Values


-------------------------------------------------------------------------------------


There are some types in Nominal Encoding :

1. One Hot Encoding
2. One Hot Encoding with more categorical variables
3. Mean Encoding



There are some other types in Ordinal Encoding:

1. Label Encoding
2. Target Encoding


------------------------------------------------------------------------------------


One Hot Encoding:

    It should be applied with respect to Nominal Categories

    In variable we have three categories: 
    
        for eaxmple : States - Germany, France, India
        
                Germany          France           India
        
        Germany    1                0               0
        France     0                1               0
        India      0                0               1
        
        
we use OneHotEncoder() function sklearn.preprocessing or we can use pd.get_dummies()

--------------------------------------------------------------------------------------

Label Encoding :

    It should be applied with respect to Ordinal Categories
    
    For Eaxmple : 
    
            Eduactional Qualification : 10th, Graduation, Masters, Inter, PHD
            
            PHD : 4, Masters : 3, Graduation : 2, Inter : 1, 10th : 0
            
    we use LabelEncoder() function from the sklearn.preprocessing
    
-------------------------------------------------------------------------------------


One Hot Encoding with multiple Categories:

    It should be applied with respect to Nominal Categories
    
    For Example:
    
        If a nominal categorical variable have multiples categories when we apply OneHotEncoder(), pd.get_dummies() functions it leads curse 
        dimensionality. To overcome this problem we just take 10 top categories which are repeated highest times in the variable
        
--------------------------------------------------------------------------------------

Target Guided Ordinal Encoding : 

    It should be applied with respect to Ordinal Categories
    
    Here we find out the target means of categories. Whcih category has highest mean we give highest rank to that particular category
    
    For Example : 
    
    Grades : A   B   C   B   A   A   C  B   C   A   B   C  A  B  C
    
    target : 1   0   1   1   0   1   1  0   0   1   0   1  1  0  0
    
    Mean of A  = (1 + 0 + 1 + 1 + 1)/5 = 4 / 5 = 0.8
    
    Mean of B  = (0 + 1 + 0 + 0 + 0)/5 = 1/5 = 0.2
    
    Mean of C  = (1 + 1 + 0 + 1 + 0)/5 = 3/5 = 0.6
    
    A - 3
    
    B - 2
    
    C - 1
    
-----------------------------------------------------------------------------------------


Mean Encoding :

    It should be applied with respect to Nominal and Ordinal Categorical variable
    
    For Each category we find out the target mean then replaced the category with this mean
    
    For Eaxmple : 
    
    Grades : A   B   C   B   A   A   C  B   C   A   B   C  A  B  C
    
    target : 1   0   1   1   0   1   1  0   0   1   0   1  1  0  0
    
    Mean of A  = (1 + 0 + 1 + 1 + 1)/5 = 4 / 5 = 0.8
    
    Mean of B  = (0 + 1 + 0 + 0 + 0)/5 = 1/5 = 0.2
    
    Mean of C  = (1 + 1 + 0 + 1 + 0)/5 = 3/5 = 0.6
    
    A - 0.8
    
    B - 0.2
    
    C - 0.6
